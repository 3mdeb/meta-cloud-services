---
 novaclient/client.py                            |   10 ++++++++++
 novaclient/openstack/common/apiclient/client.py |   10 ++++++++++
 novaclient/v1_1/client.py                       |    6 ++++++
 novaclient/v3/client.py                         |    6 ++++++
 4 files changed, 32 insertions(+)

Index: git/novaclient/client.py
===================================================================
--- git.orig/novaclient/client.py
+++ git/novaclient/client.py
@@ -266,6 +266,7 @@
             self.timeout = None
 
         self.times = []  # [("item", starttime, endtime), ...]
+        self.times_max_len = 200
 
         self.management_url = self.bypass_url or None
         self.auth_token = auth_token
@@ -328,6 +329,12 @@
         else:
             return name, value
 
+    def get_timings_max_len(self):
+        return self.times_max_len
+
+    def set_timings_max_len(self, new_len):
+        self.times_max_len = new_len
+
     def http_log_req(self, method, url, kwargs):
         if not self.http_log_debug:
             return
@@ -441,6 +448,9 @@
         resp, body = self.request(url, method, **kwargs)
         self.times.append(("%s %s" % (method, url),
                            start_time, time.time()))
+        # remove oldest items until we maintain max length
+        while len(self.times) > self.times_max_len:
+            del self.times[0]
         return resp, body
 
     def _cs_request(self, url, method, **kwargs):
Index: git/novaclient/openstack/common/apiclient/client.py
===================================================================
--- git.orig/novaclient/openstack/common/apiclient/client.py
+++ git/novaclient/openstack/common/apiclient/client.py
@@ -92,6 +92,7 @@
         self.user_agent = user_agent or self.user_agent
 
         self.times = []  # [("item", starttime, endtime), ...]
+        self.times_max_len = 200
         self.timings = timings
 
         # requests within the same session can reuse TCP connections from pool
@@ -144,6 +145,12 @@
     def reset_timings(self):
         self.times = []
 
+    def get_timings_max_len(self):
+        return self.times_max_len
+
+    def set_timings_max_len(self, new_len):
+        self.times_max_len = new_len
+
     def request(self, method, url, **kwargs):
         """Send an http request with the specified characteristics.
 
@@ -175,6 +182,9 @@
         if self.timings:
             self.times.append(("%s %s" % (method, url),
                                start_time, time.time()))
+            # remove oldest items until we maintain max length
+            while len(self.times) > self.times_max_len:
+                del self.times[0]
         self._http_log_resp(resp)
 
         if resp.status_code >= 400:
Index: git/novaclient/v1_1/client.py
===================================================================
--- git.orig/novaclient/v1_1/client.py
+++ git/novaclient/v1_1/client.py
@@ -232,3 +232,9 @@
         credentials are wrong.
         """
         self.client.authenticate()
+
+    def get_timings_max_len(self):
+        return self.client.get_timings_max_len()
+
+    def set_timings_max_len(self, new_len):
+        self.client.set_timings_max_len(new_len)
Index: git/novaclient/v3/client.py
===================================================================
--- git.orig/novaclient/v3/client.py
+++ git/novaclient/v3/client.py
@@ -194,3 +194,9 @@
         credentials are wrong.
         """
         self.client.authenticate()
+
+    def get_timings_max_len(self):
+        return self.client.get_timings_max_len()
+
+    def set_timings_max_len(self, new_len):
+        self.client.set_timings_max_len(new_len)
